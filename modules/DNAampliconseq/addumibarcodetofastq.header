AddUMIBarcodeToFastq_vars=[
    outdir     : PROJECT + "/rawdata_processed",
    logdir     : LOGS + "/AddUMIBarcodeToFastq",
    logdirWL   : LOGS + "/AddUMIBarcodeToFastq/whitelist_extraction",
    extractmethod: ESSENTIAL_EXTRACTMETHOD, // either "string" or "regex"
    bcpattern  : ESSENTIAL_BCPATTERN, // pattern of the umi and the barcode in the second read. The C are the barcode bases the Ns are the UMI bases
    bcpattern2 : ESSENTIAL_BCPATTERN_2, // in case a 2nd pattern is needed for paired end approach
    barcodelist: ESSENTIAL_WHITELIST, // whitelist of valid barcodes
    barcodelist2 : ESSENTIAL_WHITELIST2,  // whitelist of valid barcodes for 2nd run of umi_tools extract (if needed)
    error_correct_cell : ESSENTIAL_CORRECT_CB, // correct cell barcodes to whitelist (alternatives must be given in whitelist). If false, just filter against whitelist. Omitted if no whitelist is given (neither external or extracted).
    error_correct_cell2 : ESSENTIAL_CORRECT_CB2, // correct cell barcodes to whitelist2 (alternatives must be given in whitelist2). If false, just filter against whitelist2. Omitted if no whitelist is given (neither external or extracted).
    extra_umitools_extract  : "",
    // parameter for whitelist generation of accepted cell barcodes before extraction
    extractWhitelist : ESSENTIAL_EXTRACT_WHITELIST, // boolean, whether to extract a whitelist which is then just for filtering
    extractWhitelist2 : ESSENTIAL_EXTRACT_WHITELIST2, // boolean, whether to extract a whitelist2 for a 2nd run of umi_tools extract
    method : "reads",  // “reads” or “umis”. Use either reads or unique UMI counts per cell
    knee_method : "distance", // “distance” or “density”. Two methods are available to detect the ‘knee’ in the cell barcode count distributions.
    set_cell_number : "", // explicity set the number of cell barcodes which should be accepted
    expect_cells : "", // An upper limit estimate for the number of inputted cells. Note: This is not compatible with the default --knee-method=distance since there is always as single solution using this method.
    error_correct_threshold : "", // Hamming distance for correction of barcodes to whitelist barcodes. This value will also be used for error detection above the knee if required.
    ed_above_threshold : "", // Detect CBs above the threshold which may be sequence errors. “discard”: Discard all putative error CBs. “correct”: Correct putative substitution errors in CBs above the threshold. Discard putative insertions/deletions.
    write_filtered_out : true, // ONLY in umi_tools >= 1.1.0! Write out reads not matching regex pattern or cell barcode whitelist to this file
    extra_umitools_whitelist      : "" // e.g. --allow-threshold-error to allow continuing if no suitable threshold can be selected
]

load PIPELINE_ROOT + "/modules/DNAampliconseq/addumibarcodetofastq.groovy"
